/*
 * Script for exposing the data-dictionary for a Archi-model in an Excel sheet for analysis.
   Based on jArchi-example "Export tot Excel.ajs"
 */
 
 
// Load MyExcel and JSZip JS file
load(__DIR__ + "lib/jszip-101.js");
load(__DIR__ + "lib/myexcel.js");

// Show output in the console
console.show();
console.clear()
console.log("> Starting Excel Export");

// Create a new Excel file with a default font and colour
var excel = $JExcel.new("Calibri 12 #333333");

// Add a new sheet with a name
excel.set( { sheet:0, value:"Business-objects" } );

// Set up some headers including unique tags 
const  alltags = ["Name","Path", "Documentation"] ;
$('business-object').each(function(o) {
 for (i = 0; i<o.prop().length;i++) {alltags.push(o.prop()[i])};
});
const headers = [...new Set(alltags)]; //make tags unique


// Format the header with a style
var formatHeader = excel.addStyle ({
    fill: "#dddddd",
	border: "thin, thin, thin, thin #555555",
	font: "Calibri 12 #000000 B",
});

// Set the headers
for(var i = 0; i < headers.length; i++) {
	if (i<3) {
	  excel.set(0, i, 0, headers[i], formatHeader);
	} else {
	  excel.set(0, i, 0, "Tag."+headers[i], formatHeader);
	} 
    excel.set(0, i, undefined, "auto"); // column width is auto
}


// Loop through all elements and set cells to object info
	var current_row = 1;
	$('business-object').each(function(o) {
	excel.set(0, 0, current_row, o.name);
	excel.set(0, 1, current_row, find_path(o));
	excel.set(0, 2, current_row, o.documentation);
//   console.log("---------------");
//	 console.log(o.name);
//   console.log(o.documentation);
	for (i = 2; i<headers.length;i++) {
  	  excel.set(0, i, current_row, o.prop(headers[i]) == null ? "" : o.prop(headers[i]) );
//     console.log(o.prop(headers[i]));
	  }
	current_row++;
});


// Open a dialog to let the user choose where to save the generated file
var defaultFileName = model.name ? model.name + ".xlsx" : "Exported Model.xlsx"; // Default file name
var exportFile = window.promptSaveFile({ title: "Export to Excel", filterExtensions: [ "*.xlsx" ], fileName: defaultFileName } );

if(exportFile != null) {
	excel.generate(exportFile);
	console.log("> Export done");
}
else {
	console.log("> Export cancelled");
}



// Function to find the path of an element
function find_path(element) {
	var path = "";
	var parents = $(element).parents();
	for(i = parents.length - 1; i >= 0; i--) {
		path += "\\" + parents[i].name;
	}
	path += "\\" + selection.first().name;
    return path;
};
